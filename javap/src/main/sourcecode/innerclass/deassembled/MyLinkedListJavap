Classfile /C:/Users/INSUNG/Documents/dev/JVM-Compiler-ByteCode/javap/src/main/sourcecode/innerclass/MyLinkedList.class
  Last modified 2023. 4. 21.; size 1084 bytes
  SHA-256 checksum 34b88fa0bcbc174c7bb4163f470b5cd03aabd91257eb808390addc7fe173ace9
  Compiled from "MyLinkedList.java"
public class main.sourcecode.innerclass.MyLinkedList
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #8                          // main/sourcecode/innerclass/MyLinkedList
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 1, methods: 3, attributes: 3
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Fieldref           #8.#9          // main/sourcecode/innerclass/MyLinkedList.head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
   #8 = Class              #10            // main/sourcecode/innerclass/MyLinkedList
   #9 = NameAndType        #11:#12        // head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
  #10 = Utf8               main/sourcecode/innerclass/MyLinkedList
  #11 = Utf8               head
  #12 = Utf8               Lmain/sourcecode/innerclass/MyLinkedList$Node;
  #13 = Class              #14            // main/sourcecode/innerclass/MyLinkedList$Node
  #14 = Utf8               main/sourcecode/innerclass/MyLinkedList$Node
*2#15 = Methodref          #13.#16        // main/sourcecode/innerclass/MyLinkedList$Node."<init>":(Lmain/sourcecode/innerclass/MyLinkedList;Ljava/lang/String;)V
  #16 = NameAndType        #5:#17         // "<init>":(Lmain/sourcecode/innerclass/MyLinkedList;Ljava/lang/String;)V
  #17 = Utf8               (Lmain/sourcecode/innerclass/MyLinkedList;Ljava/lang/String;)V
  #18 = Fieldref           #13.#19        // main/sourcecode/innerclass/MyLinkedList$Node.link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
  #19 = NameAndType        #20:#12        // link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
  #20 = Utf8               link
  #21 = Fieldref           #22.#23        // java/lang/System.out:Ljava/io/PrintStream;
  #22 = Class              #24            // java/lang/System
  #23 = NameAndType        #25:#26        // out:Ljava/io/PrintStream;
  #24 = Utf8               java/lang/System
  #25 = Utf8               out
  #26 = Utf8               Ljava/io/PrintStream;
  #27 = String             #28            // 등록된 데이터가 없습니다.
  #28 = Utf8               등록된 데이터가 없습니다.
  #29 = Methodref          #30.#31        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #30 = Class              #32            // java/io/PrintStream
  #31 = NameAndType        #33:#34        // println:(Ljava/lang/String;)V
  #32 = Utf8               java/io/PrintStream
  #33 = Utf8               println
  #34 = Utf8               (Ljava/lang/String;)V
  #35 = String             #36            // 등록된 데이터는 다음과 같습니다.
  #36 = Utf8               등록된 데이터는 다음과 같습니다.
  #37 = Fieldref           #13.#38        // main/sourcecode/innerclass/MyLinkedList$Node.data:Ljava/lang/String;
  #38 = NameAndType        #39:#40        // data:Ljava/lang/String;
  #39 = Utf8               data
  #40 = Utf8               Ljava/lang/String;
  #41 = Utf8               Code
  #42 = Utf8               LineNumberTable
  #43 = Utf8               add
  #44 = Utf8               StackMapTable
  #45 = Utf8               print
  #46 = Utf8               SourceFile
  #47 = Utf8               MyLinkedList.java
  #48 = Utf8               NestMembers
  #49 = Utf8               InnerClasses
  #50 = Utf8               Node
{
  public main.sourcecode.innerclass.MyLinkedList();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: aconst_null
         6: putfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
         9: return
      LineNumberTable:
        line 3: 0
        line 5: 4

  public void add(java.lang.String);
    descriptor: (Ljava/lang/String;)V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=4, locals=4, args_size=2
         0: new           #13                 // class main/sourcecode/innerclass/MyLinkedList$Node
         3: dup
    *1   4: aload_0
         5: aload_1
         6: invokespecial #15                 // Method main/sourcecode/innerclass/MyLinkedList$Node."<init>":(Lmain/sourcecode/innerclass/MyLinkedList;Ljava/lang/String;)V
         9: astore_2
        10: aload_0
        11: getfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        14: ifnonnull     25
        17: aload_0
        18: aload_2
        19: putfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        22: goto          50
        25: aload_0
        26: getfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        29: astore_3
        30: aload_3
    *3  31: getfield      #18                 // Field main/sourcecode/innerclass/MyLinkedList$Node.link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        34: ifnull        45
        37: aload_3
        38: getfield      #18                 // Field main/sourcecode/innerclass/MyLinkedList$Node.link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        41: astore_3
        42: goto          30
        45: aload_3
        46: aload_2
        47: putfield      #18                 // Field main/sourcecode/innerclass/MyLinkedList$Node.link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        50: return
      LineNumberTable:
        line 18: 0
        line 20: 10
        line 21: 17
        line 23: 25
        line 24: 30
        line 25: 37
        line 27: 45
        line 29: 50
      StackMapTable: number_of_entries = 4
        frame_type = 252 /* append */
          offset_delta = 25
          locals = [ class main/sourcecode/innerclass/MyLinkedList$Node ]
        frame_type = 252 /* append */
          offset_delta = 4
          locals = [ class main/sourcecode/innerclass/MyLinkedList$Node ]
        frame_type = 14 /* same */
        frame_type = 250 /* chop */
          offset_delta = 4

  public void print();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: aload_0
         1: getfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
         4: ifnonnull     18
         7: getstatic     #21                 // Field java/lang/System.out:Ljava/io/PrintStream;
        10: ldc           #27                 // String 등록된 데이터가 없습니다.
        12: invokevirtual #29                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        15: goto          53
        18: getstatic     #21                 // Field java/lang/System.out:Ljava/io/PrintStream;
        21: ldc           #35                 // String 등록된 데이터는 다음과 같습니다.
        23: invokevirtual #29                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        26: aload_0
        27: getfield      #7                  // Field head:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        30: astore_1
        31: aload_1
        32: ifnull        53
        35: getstatic     #21                 // Field java/lang/System.out:Ljava/io/PrintStream;
        38: aload_1
        39: getfield      #37                 // Field main/sourcecode/innerclass/MyLinkedList$Node.data:Ljava/lang/String;
        42: invokevirtual #29                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        45: aload_1
        46: getfield      #18                 // Field main/sourcecode/innerclass/MyLinkedList$Node.link:Lmain/sourcecode/innerclass/MyLinkedList$Node;
        49: astore_1
        50: goto          31
        53: return
      LineNumberTable:
        line 32: 0
        line 33: 7
        line 35: 18
        line 36: 26
        line 37: 31
        line 38: 35
        line 39: 45
        line 42: 53
      StackMapTable: number_of_entries = 3
        frame_type = 18 /* same */
        frame_type = 252 /* append */
          offset_delta = 12
          locals = [ class main/sourcecode/innerclass/MyLinkedList$Node ]
        frame_type = 250 /* chop */
          offset_delta = 21
}
SourceFile: "MyLinkedList.java"
NestMembers:
  main/sourcecode/innerclass/MyLinkedList$Node

--------------------------
*1 - inner 클래스 생성 시, outer 클래스의 인스턴스를 전달받는다
*2 - 실제 $Node의 <init>에 대한 참조는 MyLinkedList 클래스가 가지고 있음 - 당연한 걸지도
    -> why? outerCLass의 인스턴스에 대한 정보를 넘겨야 innerClass 인스턴스를 생성할 수 있기 때문에!
    -> 실제로 $Node에 들어가면, 해당 innerClass의 인스턴스를 this$0이라는 이름으로 자동 필드 생성하고 초기화가 이루어짐
    *** 실제로 단일 클래스에서, Object.<init>을 호출해서 초기화 method를 참조하는 것 외에 다른 클래스의 <init>을 참조하는 것은 이례적임 (Main 제외)

*3 - 실제 $Node의 필드에 접근할 때는 constantpool참조 방식이 다르다 - MyLinkedList의 필드로써 $Node를 접근할 때와 비교