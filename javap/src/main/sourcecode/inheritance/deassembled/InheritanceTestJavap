Classfile /C:/Users/INSUNG/Documents/dev/JVM-Compiler-ByteCode/javap/src/main/sourcecode/inheritance/InheritanceTest.class
  Last modified 2023. 4. 15.; size 773 bytes
  SHA-256 checksum 6e5c4fce345de565b3d061340cce5a0ef181609b334f281bb1c2101c3d8bae4d
  Compiled from "InheritanceTest.java"
public class main.sourcecode.inheritance.InheritanceTest
  minor version: 0
  major version: 61
  flags: (0x0021) ACC_PUBLIC, ACC_SUPER
  this_class: #48                         // main/sourcecode/inheritance/InheritanceTest
  super_class: #2                         // java/lang/Object
  interfaces: 0, fields: 0, methods: 2, attributes: 1
Constant pool:
   #1 = Methodref          #2.#3          // java/lang/Object."<init>":()V
   #2 = Class              #4             // java/lang/Object
   #3 = NameAndType        #5:#6          // "<init>":()V
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Class              #8             // main/sourcecode/inheritance/Employee
   #8 = Utf8               main/sourcecode/inheritance/Employee
   #9 = Methodref          #7.#3          // main/sourcecode/inheritance/Employee."<init>":()V
  #10 = Class              #11            // main/sourcecode/inheritance/Student
  #11 = Utf8               main/sourcecode/inheritance/Student
  #12 = Methodref          #10.#3         // main/sourcecode/inheritance/Student."<init>":()V
  #13 = String             #14            // koala
  #14 = Utf8               koala
  #15 = Methodref          #7.#16         // main/sourcecode/inheritance/Employee.setName:(Ljava/lang/String;)V
  #16 = NameAndType        #17:#18        // setName:(Ljava/lang/String;)V
  #17 = Utf8               setName
  #18 = Utf8               (Ljava/lang/String;)V
  #19 = Methodref          #7.#20         // main/sourcecode/inheritance/Employee.setAge:(I)V
  #20 = NameAndType        #21:#22        // setAge:(I)V
  #21 = Utf8               setAge
  #22 = Utf8               (I)V
  #23 = Long               1234l
  #25 = Methodref          #26.#27        // java/lang/Long.valueOf:(J)Ljava/lang/Long;
  #26 = Class              #28            // java/lang/Long
  #27 = NameAndType        #29:#30        // valueOf:(J)Ljava/lang/Long;
  #28 = Utf8               java/lang/Long
  #29 = Utf8               valueOf
  #30 = Utf8               (J)Ljava/lang/Long;
  #31 = Methodref          #7.#32         // main/sourcecode/inheritance/Employee.setEmpId:(Ljava/lang/Long;)V
  #32 = NameAndType        #33:#34        // setEmpId:(Ljava/lang/Long;)V
  #33 = Utf8               setEmpId
  #34 = Utf8               (Ljava/lang/Long;)V
  #35 = String             #36            // azuma
  #36 = Utf8               azuma
  #37 = Methodref          #10.#16        // main/sourcecode/inheritance/Student.setName:(Ljava/lang/String;)V
  #38 = Methodref          #10.#20        // main/sourcecode/inheritance/Student.setAge:(I)V
  #39 = String             #40            // film
  #40 = Utf8               film
  #41 = Methodref          #10.#42        // main/sourcecode/inheritance/Student.setMajor:(Ljava/lang/String;)V
  #42 = NameAndType        #43:#18        // setMajor:(Ljava/lang/String;)V
  #43 = Utf8               setMajor
  #44 = Methodref          #7.#45         // main/sourcecode/inheritance/Employee.printData:()V
  #45 = NameAndType        #46:#6         // printData:()V
  #46 = Utf8               printData
  #47 = Methodref          #10.#45        // main/sourcecode/inheritance/Student.printData:()V
  #48 = Class              #49            // main/sourcecode/inheritance/InheritanceTest
  #49 = Utf8               main/sourcecode/inheritance/InheritanceTest
  #50 = Utf8               Code
  #51 = Utf8               LineNumberTable
  #52 = Utf8               main
  #53 = Utf8               ([Ljava/lang/String;)V
  #54 = Utf8               SourceFile
  #55 = Utf8               InheritanceTest.java
{
  public main.sourcecode.inheritance.InheritanceTest();
    descriptor: ()V
    flags: (0x0001) ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: (0x0009) ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=3, args_size=1
         0: new           #7                  // class main/sourcecode/inheritance/Employee
         3: dup
         4: invokespecial #9                  // Method main/sourcecode/inheritance/Employee."<init>":()V
         7: astore_1
         8: new           #10                 // class main/sourcecode/inheritance/Student
        11: dup
        12: invokespecial #12                 // Method main/sourcecode/inheritance/Student."<init>":()V
        15: astore_2
        16: aload_1
        17: ldc           #13                 // String koala
        19: invokevirtual #15                 // Method main/sourcecode/inheritance/Employee.setName:(Ljava/lang/String;)V
        22: aload_1
     1* 23: bipush        33
     3* 25: invokevirtual #19                 // Method main/sourcecode/inheritance/Employee.setAge:(I)V
        28: aload_1
     2* 29: ldc2_w        #23                 // long 1234l
     2* 32: invokestatic  #25                 // Method java/lang/Long.valueOf:(J)Ljava/lang/Long;
        35: invokevirtual #31                 // Method main/sourcecode/inheritance/Employee.setEmpId:(Ljava/lang/Long;)V
        38: aload_2
        39: ldc           #35                 // String azuma
        41: invokevirtual #37                 // Method main/sourcecode/inheritance/Student.setName:(Ljava/lang/String;)V
        44: aload_2
     1* 45: iconst_2
        46: invokevirtual #38                 // Method main/sourcecode/inheritance/Student.setAge:(I)V
        49: aload_2
        50: ldc           #39                 // String film
        52: invokevirtual #41                 // Method main/sourcecode/inheritance/Student.setMajor:(Ljava/lang/String;)V
        55: aload_1
        56: invokevirtual #44                 // Method main/sourcecode/inheritance/Employee.printData:()V
        59: aload_2
        60: invokevirtual #47                 // Method main/sourcecode/inheritance/Student.printData:()V
        63: return
      LineNumberTable:
        line 6: 0
        line 7: 8
        line 9: 16
        line 10: 22
        line 11: 28
        line 13: 38
        line 14: 44
        line 15: 49
        line 18: 55
        line 19: 59
        line 20: 63
}
SourceFile: "InheritanceTest.java"

-----
질문
1* - int형 정수의 범위에 따라 integer or int로 자연스럽게 operand를 stack에 추가하는 것으로 유추
2* - 리터럴은 리터럴일 뿐, 실제로는 wrapper 클래스 형태로 전환 후 operand로 사용
3* - 자식 클래스의 바이트 코드 내에서는, 부모의 method를 호출할 시, 우선적으로는 자식클래스.method로 표시한 후,
     methodref를 찾아갈 때 부모 클래스의 정보를 따로 탐색하는 것으로 유추
